<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classlogic_1_1Random" kind="class" language="C++" prot="public">
    <compoundname>logic::Random</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classlogic_1_1Random_1aa4e9c4601cd0f08c148e437c46942677" prot="private" static="yes" mutable="no">
        <type><ref refid="classlogic_1_1Random" kindref="compound">Random</ref> *</type>
        <definition>Random * logic::Random::s_instance</definition>
        <argsstring></argsstring>
        <name>s_instance</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logic_libary/Random.h" line="13" column="23" bodyfile="src/Logic_libary/Random.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classlogic_1_1Random_1a564be8ba664ff01e6aa1db3d2df1cf4f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlogic_1_1Random" kindref="compound">Random</ref> *</type>
        <definition>Random * logic::Random::Instance</definition>
        <argsstring>()</argsstring>
        <name>Instance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logic_libary/Random.h" line="17" column="23" bodyfile="src/Logic_libary/Random.cpp" bodystart="6" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classlogic_1_1Random_1a8f9084e83eca2c84c31f94acfbb00218" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void logic::Random::Release</definition>
        <argsstring>()</argsstring>
        <name>Release</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logic_libary/Random.h" line="19" column="21" bodyfile="src/Logic_libary/Random.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlogic_1_1Random_1a4262dd0d8e178dd671f56daa4b35756c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlatformType</type>
        <definition>PlatformType logic::Random::getPlatformType</definition>
        <argsstring>()</argsstring>
        <name>getPlatformType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logic_libary/Random.h" line="21" column="22" bodyfile="src/Logic_libary/Random.cpp" bodystart="25" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classlogic_1_1Random_1a9e18d86116420ea7b08059095449d9e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BonusType</type>
        <definition>BonusType logic::Random::getBonusType</definition>
        <argsstring>()</argsstring>
        <name>getBonusType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logic_libary/Random.h" line="23" column="19" bodyfile="src/Logic_libary/Random.cpp" bodystart="38" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classlogic_1_1Random_1af4048ed5f2693d148a69fd69c8322152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool logic::Random::createPlatform</definition>
        <argsstring>()</argsstring>
        <name>createPlatform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logic_libary/Random.h" line="25" column="14" bodyfile="src/Logic_libary/Random.cpp" bodystart="47" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classlogic_1_1Random_1aa3089bff0e66db756a153d4afbcf23ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool logic::Random::createBonus</definition>
        <argsstring>()</argsstring>
        <name>createBonus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logic_libary/Random.h" line="27" column="14" bodyfile="src/Logic_libary/Random.cpp" bodystart="74" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classlogic_1_1Random_1a816bbfea6d1847f99b6a4a1d604b798c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float logic::Random::giveRandomX</definition>
        <argsstring>(float leftBound, float rightBound)</argsstring>
        <name>giveRandomX</name>
        <param>
          <type>float</type>
          <declname>leftBound</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rightBound</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logic_libary/Random.h" line="29" column="15" bodyfile="src/Logic_libary/Random.cpp" bodystart="57" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classlogic_1_1Random_1aaa700e12cd8e780e32a7f2b9c3022493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void logic::Random::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logic_libary/Random.h" line="31" column="14" bodyfile="src/Logic_libary/Random.cpp" bodystart="23" bodyend="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classlogic_1_1Random_1a7b4f4508c119caeadb94ad569e864015" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>logic::Random::Random</definition>
        <argsstring>()</argsstring>
        <name>Random</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logic_libary/Random.h" line="35" column="9" bodyfile="src/Logic_libary/Random.cpp" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classlogic_1_1Random_1ae9e2099c3d1867da2f777b475da2f3da" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>logic::Random::~Random</definition>
        <argsstring>()</argsstring>
        <name>~Random</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logic_libary/Random.h" line="37" column="9" bodyfile="src/Logic_libary/Random.cpp" bodystart="21" bodyend="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Logic_libary/Random.h" line="12" column="17" bodyfile="src/Logic_libary/Random.h" bodystart="12" bodyend="39"/>
    <listofallmembers>
      <member refid="classlogic_1_1Random_1aa3089bff0e66db756a153d4afbcf23ee" prot="public" virt="non-virtual"><scope>logic::Random</scope><name>createBonus</name></member>
      <member refid="classlogic_1_1Random_1af4048ed5f2693d148a69fd69c8322152" prot="public" virt="non-virtual"><scope>logic::Random</scope><name>createPlatform</name></member>
      <member refid="classlogic_1_1Random_1a9e18d86116420ea7b08059095449d9e8" prot="public" virt="non-virtual"><scope>logic::Random</scope><name>getBonusType</name></member>
      <member refid="classlogic_1_1Random_1a4262dd0d8e178dd671f56daa4b35756c" prot="public" virt="non-virtual"><scope>logic::Random</scope><name>getPlatformType</name></member>
      <member refid="classlogic_1_1Random_1a816bbfea6d1847f99b6a4a1d604b798c" prot="public" virt="non-virtual"><scope>logic::Random</scope><name>giveRandomX</name></member>
      <member refid="classlogic_1_1Random_1a564be8ba664ff01e6aa1db3d2df1cf4f" prot="public" virt="non-virtual"><scope>logic::Random</scope><name>Instance</name></member>
      <member refid="classlogic_1_1Random_1a7b4f4508c119caeadb94ad569e864015" prot="private" virt="non-virtual"><scope>logic::Random</scope><name>Random</name></member>
      <member refid="classlogic_1_1Random_1a8f9084e83eca2c84c31f94acfbb00218" prot="public" virt="non-virtual"><scope>logic::Random</scope><name>Release</name></member>
      <member refid="classlogic_1_1Random_1aaa700e12cd8e780e32a7f2b9c3022493" prot="public" virt="non-virtual"><scope>logic::Random</scope><name>Reset</name></member>
      <member refid="classlogic_1_1Random_1aa4e9c4601cd0f08c148e437c46942677" prot="private" virt="non-virtual"><scope>logic::Random</scope><name>s_instance</name></member>
      <member refid="classlogic_1_1Random_1ae9e2099c3d1867da2f777b475da2f3da" prot="private" virt="non-virtual"><scope>logic::Random</scope><name>~Random</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
