<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classlogic_1_1Subject" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>logic::Subject</compoundname>
    <derivedcompoundref refid="classlogic_1_1EntityModel" prot="public" virt="non-virtual">logic::EntityModel</derivedcompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlogic_1_1Subject_1ad917bc5437255a860b0f60a5f5811822" prot="private" static="no" mutable="no">
        <type>vector&lt; shared_ptr&lt; <ref refid="classlogic_1_1Observer" kindref="compound">Observer</ref> &gt; &gt;</type>
        <definition>vector&lt;shared_ptr&lt;Observer&gt; &gt; logic::Subject::m_observers</definition>
        <argsstring></argsstring>
        <name>m_observers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logic_libary/Subject.h" line="27" column="16" bodyfile="src/Logic_libary/Subject.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlogic_1_1Subject_1ae1277f400422f50b425c204b11dd8995" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>logic::Subject::Subject</definition>
        <argsstring>()</argsstring>
        <name>Subject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Een vector die alle observers van het subject bevat Een constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logic_libary/Subject.h" line="34" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classlogic_1_1Subject_1aa7342ad5c11b6ca1afe108be5fbcdbfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void logic::Subject::addObserver</definition>
        <argsstring>(const shared_ptr&lt; Observer &gt; &amp;observer)</argsstring>
        <name>addObserver</name>
        <param>
          <type>const shared_ptr&lt; <ref refid="classlogic_1_1Observer" kindref="compound">Observer</ref> &gt; &amp;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function: addObserver(Observer observer) Voegt een observer toe aan de vector van observers van het subject. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observer</parametername>
</parameternamelist>
<parameterdescription>
<para>een observer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logic_libary/Subject.h" line="41" column="14" bodyfile="src/Logic_libary/Subject.cpp" bodystart="7" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="classlogic_1_1Subject_1ad80222ad59f6ee6935d6f97f4cfdf5fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void logic::Subject::removeObserver</definition>
        <argsstring>(const shared_ptr&lt; Observer &gt; &amp;observer)</argsstring>
        <name>removeObserver</name>
        <param>
          <type>const shared_ptr&lt; <ref refid="classlogic_1_1Observer" kindref="compound">Observer</ref> &gt; &amp;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function: removeObserver(Observer observer) Verwijdert een observer uit de vector van observers van het subject. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observer</parametername>
</parameternamelist>
<parameterdescription>
<para>een observer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logic_libary/Subject.h" line="48" column="14" bodyfile="src/Logic_libary/Subject.cpp" bodystart="10" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classlogic_1_1Subject_1aa4ae2ce3696c9b68f2574abf878e36e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void logic::Subject::Notify</definition>
        <argsstring>()=0</argsstring>
        <name>Notify</name>
        <reimplementedby refid="classlogic_1_1EntityModel_1aa59f06863fd2c1fcc8cb3c770c48b154">Notify</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function: <ref refid="classlogic_1_1Subject_1aa4ae2ce3696c9b68f2574abf878e36e3" kindref="member">Notify()</ref> Gaat over alle observer van het subject en roept hier de update function op aan. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logic_libary/Subject.h" line="54" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classlogic_1_1Subject_1a6943fb87b97d9682a975f626b1718207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void logic::Subject::emptyObserver</definition>
        <argsstring>()</argsstring>
        <name>emptyObserver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function: <ref refid="classlogic_1_1Subject_1a6943fb87b97d9682a975f626b1718207" kindref="member">emptyObserver()</ref> Verwijderd alle observers uit zijn vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logic_libary/Subject.h" line="60" column="14" bodyfile="src/Logic_libary/Subject.cpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classlogic_1_1Subject_1a7e504db5db9ea2be86fd6b77d64807b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; shared_ptr&lt; <ref refid="classlogic_1_1Observer" kindref="compound">Observer</ref> &gt; &gt;</type>
        <definition>vector&lt; shared_ptr&lt; Observer &gt; &gt; logic::Subject::getObservers</definition>
        <argsstring>()</argsstring>
        <name>getObservers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function: <ref refid="classlogic_1_1Subject_1a7e504db5db9ea2be86fd6b77d64807b0" kindref="member">getObservers()</ref> Geeft een vector van observers terug die behoren tot het subject. <simplesect kind="return"><para>: vector&lt;shared_ptr&lt;Observer&gt;&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logic_libary/Subject.h" line="67" column="16" bodyfile="src/Logic_libary/Subject.cpp" bodystart="23" bodyend="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>logic::Spring_L</label>
        <link refid="classlogic_1_1Spring__L"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>logic::Bonus_L</label>
        <link refid="classlogic_1_1Bonus__L"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>logic::BG_Tile_L</label>
        <link refid="classlogic_1_1BG__Tile__L"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>logic::Player_L</label>
        <link refid="classlogic_1_1Player__L"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>logic::Subject</label>
        <link refid="classlogic_1_1Subject"/>
      </node>
      <node id="2">
        <label>logic::EntityModel</label>
        <link refid="classlogic_1_1EntityModel"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>logic::Platform_L</label>
        <link refid="classlogic_1_1Platform__L"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>logic::Platform_L_static</label>
        <link refid="classlogic_1_1Platform__L__static"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>logic::Platform_L_vertical</label>
        <link refid="classlogic_1_1Platform__L__vertical"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>logic::Platform_L_horizontal</label>
        <link refid="classlogic_1_1Platform__L__horizontal"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>logic::Rocket_L</label>
        <link refid="classlogic_1_1Rocket__L"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>logic::Platform_L_temporary</label>
        <link refid="classlogic_1_1Platform__L__temporary"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/Logic_libary/Subject.h" line="26" column="18" bodyfile="src/Logic_libary/Subject.h" bodystart="26" bodyend="71"/>
    <listofallmembers>
      <member refid="classlogic_1_1Subject_1aa7342ad5c11b6ca1afe108be5fbcdbfb" prot="public" virt="non-virtual"><scope>logic::Subject</scope><name>addObserver</name></member>
      <member refid="classlogic_1_1Subject_1a6943fb87b97d9682a975f626b1718207" prot="public" virt="non-virtual"><scope>logic::Subject</scope><name>emptyObserver</name></member>
      <member refid="classlogic_1_1Subject_1a7e504db5db9ea2be86fd6b77d64807b0" prot="public" virt="non-virtual"><scope>logic::Subject</scope><name>getObservers</name></member>
      <member refid="classlogic_1_1Subject_1ad917bc5437255a860b0f60a5f5811822" prot="private" virt="non-virtual"><scope>logic::Subject</scope><name>m_observers</name></member>
      <member refid="classlogic_1_1Subject_1aa4ae2ce3696c9b68f2574abf878e36e3" prot="public" virt="pure-virtual"><scope>logic::Subject</scope><name>Notify</name></member>
      <member refid="classlogic_1_1Subject_1ad80222ad59f6ee6935d6f97f4cfdf5fc" prot="public" virt="non-virtual"><scope>logic::Subject</scope><name>removeObserver</name></member>
      <member refid="classlogic_1_1Subject_1ae1277f400422f50b425c204b11dd8995" prot="public" virt="non-virtual"><scope>logic::Subject</scope><name>Subject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
