<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classRepresentation_1_1ConcreteFactory" kind="class" language="C++" prot="public">
    <compoundname>Representation::ConcreteFactory</compoundname>
    <basecompoundref refid="classlogic_1_1EntityFactory" prot="public" virt="non-virtual">logic::EntityFactory</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classRepresentation_1_1ConcreteFactory_1a98735abd573bfcbdb85d1333ee1ae504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Representation::ConcreteFactory::ConcreteFactory</definition>
        <argsstring>()</argsstring>
        <name>ConcreteFactory</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>@function <ref refid="classRepresentation_1_1ConcreteFactory_1a98735abd573bfcbdb85d1333ee1ae504" kindref="member">ConcreteFactory()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Game_Representation/ConcreteFactory.h" line="32" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classRepresentation_1_1ConcreteFactory_1a3f5f3d4cd4fbec91b9563dc181bd24ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Representation::ConcreteFactory::createPlayer</definition>
        <argsstring>(shared_ptr&lt; logic::Player_L &gt; &amp;player) override</argsstring>
        <name>createPlayer</name>
        <reimplements refid="classlogic_1_1EntityFactory_1af228fe31097965efb5709dc24ad22b06">createPlayer</reimplements>
        <param>
          <type>shared_ptr&lt; <ref refid="classlogic_1_1Player__L" kindref="compound">logic::Player_L</ref> &gt; &amp;</type>
          <declname>player</declname>
        </param>
        <briefdescription>
<para>Maakt een nieuwe Player aan dat een observer is en wordt toegevoegd aan het subject player. Deze functie wordt overschreven uit de base class EntityFactory. </para>
        </briefdescription>
        <detaileddescription>
<para>@function void <ref refid="classRepresentation_1_1ConcreteFactory_1a3f5f3d4cd4fbec91b9563dc181bd24ef" kindref="member">createPlayer(shared_ptr&lt;logic::Player_L&gt; &amp;subject)</ref> override <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>een shared_ptr naar een Player_L wat een afleiding is van een EnityModel. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Game_Representation/ConcreteFactory.h" line="40" column="14" bodyfile="src/Game_Representation/ConcreteFactory.cpp" bodystart="7" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classRepresentation_1_1ConcreteFactory_1a65472c9251872e6b8ae19315cb41bc4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Representation::ConcreteFactory::createBG_Tile</definition>
        <argsstring>(shared_ptr&lt; logic::BG_Tile_L &gt; &amp;bg_tile) override</argsstring>
        <name>createBG_Tile</name>
        <reimplements refid="classlogic_1_1EntityFactory_1a3df331b31d8bb18dcc96346661ab7a0b">createBG_Tile</reimplements>
        <param>
          <type>shared_ptr&lt; <ref refid="classlogic_1_1BG__Tile__L" kindref="compound">logic::BG_Tile_L</ref> &gt; &amp;</type>
          <declname>bg_tile</declname>
        </param>
        <briefdescription>
<para>Maakt een nieuwe BG_Tile aan dat een observer is en wordt toegevoegd aan het subject bg_tile. Deze functie wordt overschreven uit de base class EntityFactory. </para>
        </briefdescription>
        <detaileddescription>
<para>@function void <ref refid="classRepresentation_1_1ConcreteFactory_1a65472c9251872e6b8ae19315cb41bc4b" kindref="member">createBG_Tile(shared_ptr&lt;logic::BG_Tile_L&gt; &amp;bg_tile)</ref> override <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bg_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>een shared_ptr naar een BG_Tile_L wat een afleiding is van een EnityModel. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Game_Representation/ConcreteFactory.h" line="48" column="14" bodyfile="src/Game_Representation/ConcreteFactory.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classRepresentation_1_1ConcreteFactory_1a29a89deb705b16d11160cd7e7a1e8174" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Representation::ConcreteFactory::createPlatform</definition>
        <argsstring>(shared_ptr&lt; logic::Platform_L &gt; &amp;platform, _Platform type) override</argsstring>
        <name>createPlatform</name>
        <reimplements refid="classlogic_1_1EntityFactory_1aa5efa638ae594d5f1dde0eccab926bbc">createPlatform</reimplements>
        <param>
          <type>shared_ptr&lt; <ref refid="classlogic_1_1Platform__L" kindref="compound">logic::Platform_L</ref> &gt; &amp;</type>
          <declname>platform</declname>
        </param>
        <param>
          <type>_Platform</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Maakt een nieuw Platform aan naargelang het type, dat een observer is en wordt toegevoegd aan het subject platform. Deze functie wordt overschreven uit de base class EntityFactory. </para>
        </briefdescription>
        <detaileddescription>
<para>@function void <ref refid="classRepresentation_1_1ConcreteFactory_1a29a89deb705b16d11160cd7e7a1e8174" kindref="member">createPlatform(shared_ptr&lt;logic::Platform_L&gt; &amp;platform, _Platform type)</ref> override <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>platform</parametername>
</parameternamelist>
<parameterdescription>
<para>een shared_ptr naar een Platform_L wat een afleiding is van een EnityModel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>bevat het de soort van het platform dat aangemaakt moet worden. (Static, Horizontal, Vertical, Temporary) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Game_Representation/ConcreteFactory.h" line="57" column="14" bodyfile="src/Game_Representation/ConcreteFactory.cpp" bodystart="17" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classRepresentation_1_1ConcreteFactory_1a032223234e0d4bc8be3283403a8619d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Representation::ConcreteFactory::createBonus</definition>
        <argsstring>(shared_ptr&lt; logic::Bonus_L &gt; &amp;bonus, _Bonus type) override</argsstring>
        <name>createBonus</name>
        <reimplements refid="classlogic_1_1EntityFactory_1aac399ee28420c94730d3825733d4eee6">createBonus</reimplements>
        <param>
          <type>shared_ptr&lt; <ref refid="classlogic_1_1Bonus__L" kindref="compound">logic::Bonus_L</ref> &gt; &amp;</type>
          <declname>bonus</declname>
        </param>
        <param>
          <type>_Bonus</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Maakt een nieuwe Bonus aan naargelang het type, dat een observer is en wordt toegevoegd aan de subject bonus. Deze functie wordt overschreven uit de base class EntityFactory. </para>
        </briefdescription>
        <detaileddescription>
<para>@function void <ref refid="classRepresentation_1_1ConcreteFactory_1a032223234e0d4bc8be3283403a8619d5" kindref="member">createBonus(shared_ptr&lt;logic::Bonus_L&gt; &amp;bonus, _Bonus type)</ref> override <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bonus</parametername>
</parameternamelist>
<parameterdescription>
<para>een shared_ptr naar een Bonus_L wat een afleiding is van een EnityModel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>bevat het de soort van de bonus dat aangemaakt moet worden. (Spring, Rocket) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Game_Representation/ConcreteFactory.h" line="66" column="14" bodyfile="src/Game_Representation/ConcreteFactory.cpp" bodystart="38" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classRepresentation_1_1ConcreteFactory_1a0a6b5840f92896df74145d32f067a432" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Representation::ConcreteFactory::createScore</definition>
        <argsstring>(shared_ptr&lt; logic::Player_L &gt; &amp;player, shared_ptr&lt; logic::Score &gt; &amp;score) override</argsstring>
        <name>createScore</name>
        <reimplements refid="classlogic_1_1EntityFactory_1ae54b6c99bc109c3dfc776d00b47f90eb">createScore</reimplements>
        <param>
          <type>shared_ptr&lt; <ref refid="classlogic_1_1Player__L" kindref="compound">logic::Player_L</ref> &gt; &amp;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>shared_ptr&lt; <ref refid="classlogic_1_1Score" kindref="compound">logic::Score</ref> &gt; &amp;</type>
          <declname>score</declname>
        </param>
        <briefdescription>
<para>Maakt een nieuwe score aan dat een observer is en wordt toegevoegd aan de subject player. Deze functie wordt overschreven uit de base class EntityFactory. </para>
        </briefdescription>
        <detaileddescription>
<para>@function void <ref refid="classRepresentation_1_1ConcreteFactory_1a0a6b5840f92896df74145d32f067a432" kindref="member">createScore(shared_ptr&lt;logic::Player_L&gt; &amp;player, shared_ptr&lt;logic::Score&gt;&amp; score)</ref> override <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>een shared_ptr naar een Player_L wat een afleiding is van een EnityModel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>score</parametername>
</parameternamelist>
<parameterdescription>
<para>een shared_ptr naar een Score wat een afleiding is van een Observer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Game_Representation/ConcreteFactory.h" line="75" column="14" bodyfile="src/Game_Representation/ConcreteFactory.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>logic::EntityFactory</label>
        <link refid="classlogic_1_1EntityFactory"/>
      </node>
      <node id="1">
        <label>Representation::ConcreteFactory</label>
        <link refid="classRepresentation_1_1ConcreteFactory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>logic::EntityFactory</label>
        <link refid="classlogic_1_1EntityFactory"/>
      </node>
      <node id="1">
        <label>Representation::ConcreteFactory</label>
        <link refid="classRepresentation_1_1ConcreteFactory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/Game_Representation/ConcreteFactory.h" line="25" column="54" bodyfile="src/Game_Representation/ConcreteFactory.h" bodystart="25" bodyend="77"/>
    <listofallmembers>
      <member refid="classRepresentation_1_1ConcreteFactory_1a98735abd573bfcbdb85d1333ee1ae504" prot="public" virt="non-virtual"><scope>Representation::ConcreteFactory</scope><name>ConcreteFactory</name></member>
      <member refid="classRepresentation_1_1ConcreteFactory_1a65472c9251872e6b8ae19315cb41bc4b" prot="public" virt="virtual"><scope>Representation::ConcreteFactory</scope><name>createBG_Tile</name></member>
      <member refid="classRepresentation_1_1ConcreteFactory_1a032223234e0d4bc8be3283403a8619d5" prot="public" virt="virtual"><scope>Representation::ConcreteFactory</scope><name>createBonus</name></member>
      <member refid="classRepresentation_1_1ConcreteFactory_1a29a89deb705b16d11160cd7e7a1e8174" prot="public" virt="virtual"><scope>Representation::ConcreteFactory</scope><name>createPlatform</name></member>
      <member refid="classRepresentation_1_1ConcreteFactory_1a3f5f3d4cd4fbec91b9563dc181bd24ef" prot="public" virt="virtual"><scope>Representation::ConcreteFactory</scope><name>createPlayer</name></member>
      <member refid="classRepresentation_1_1ConcreteFactory_1a0a6b5840f92896df74145d32f067a432" prot="public" virt="virtual"><scope>Representation::ConcreteFactory</scope><name>createScore</name></member>
      <member refid="classlogic_1_1EntityFactory_1a7825e52b73296d28e4621b7bdfda849e" prot="public" virt="non-virtual"><scope>Representation::ConcreteFactory</scope><name>EntityFactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
