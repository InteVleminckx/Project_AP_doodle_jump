.TH "nlohmann::detail::has_from_json< BasicJsonType, T, enable_if_t< not is_basic_json< T >::value > >" 3 "Fri Jan 14 2022" "Doxygen Test" \" -*- nroff -*-
.ad l
.nh
.SH NAME
nlohmann::detail::has_from_json< BasicJsonType, T, enable_if_t< not is_basic_json< T >::value > >
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "using \fBserializer\fP = typename BasicJsonType::template json_serializer< T, void >"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr bool \fBvalue\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename BasicJsonType, typename T>
.br
struct nlohmann::detail::has_from_json< BasicJsonType, T, enable_if_t< not is_basic_json< T >::value > >"

.PP
Definition at line 2523 of file json\&.hpp\&.
.SH "Member Data Documentation"
.PP 
.SS "template<typename BasicJsonType , typename T > constexpr bool \fBnlohmann::detail::has_from_json\fP< BasicJsonType, T, enable_if_t< not \fBis_basic_json\fP< T >::value > >::value\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
        is_detected_exact<void, from_json_function, serializer,
        const BasicJsonType&, T&>::value
.fi
.PP
Definition at line 2528 of file json\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Doxygen Test from the source code\&.
